Through lesson 7 and 8, we built a well fucntiong blog site, but in app,js of lesson7 we can see that
the code in that file is quite large and somewhat unoraganized.

We have routes all over, logic all over , basically it looks messy.
So what we're now learn about express router and MVC.

-> Express Router:

It is something that comes fully baked into the express i.e no additional libraries or pacakages need. It is built in feature for express,
which we can use to manage all of our routes more efficiently and more tidly.

Especially as the size of your project grows and grows and you have got many different routes.
So we use the xpress router to split our roustes into many different files and merge it easily, making the 
experience much better.


-> MVC:

 -Stands for Model, View, Controller
 -MVC is a way of structuring our code and files
 -keeps code more modular, reuseable and easier to read

So, we have already used models and views in our previous lesson,
 ->View are were we made our html pages and
 ->Models are how we describe our data structure with the help of schemas, and we use htta to interact with the DB

Now so, controllers are the things that form the link between our models and our views.
They're like the middle men that use the models to get data and pass that data to views.

   MODELS------>Controller----->View

   So that means we have actually already used controllers direclty in our route handles, but the idea of 
   using controllers is that we extract those handler functions into separate controller files.

   ! We don't necessarily have to use extra controllers files, we js use it to make our code more readable and easier to undertsand.

   How it works?
   
     We're just splitting our code into different areas/files and then each area/file has its own job to do.
     So, a route file matches incoming requests and it passes those requests to the correct controller functions and then the controller 
     communicates with the appropriate model to get data into a view and then the view renders that data into its template that get sent to the browser.